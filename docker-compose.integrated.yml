version: '3.8'

services:
  # Base de datos PostgreSQL con RLS
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: pulpo
      POSTGRES_USER: pulpo
      POSTGRES_PASSWORD: pulpo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    command: >
      postgres
      -c shared_preload_libraries=vector
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB

  # Redis para cache y debounce
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Ollama para LLM
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Orchestrator Service
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    ports:
      - "8005:8005"
    environment:
      - DATABASE_URL=postgresql://pulpo:pulpo@postgres:5432/pulpo
      - REDIS_URL=redis://redis:6379
      - OLLAMA_URL=http://ollama:11434
      - JWT_SECRET=your-secret-key-here
      - JWT_ALGORITHM=HS256
    depends_on:
      - postgres
      - redis
      - ollama
    volumes:
      - ./core:/app/core
      - ./services:/app/services
      - ./utils:/app/utils

  # Actions Service v2
  actions:
    build:
      context: .
      dockerfile: Dockerfile.actions
    ports:
      - "8006:8006"
    environment:
      - DATABASE_URL=postgresql://pulpo:pulpo@postgres:5432/pulpo
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key-here
      - JWT_ALGORITHM=HS256
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services:/app/services
      - ./utils:/app/utils
    command: ["python", "-m", "uvicorn", "services.actions_service_v2:app", "--host", "0.0.0.0", "--port", "8006", "--reload"]

  # File Ingestor Service
  ingestion:
    build:
      context: .
      dockerfile: Dockerfile.ingestion
    ports:
      - "8007:8007"
    environment:
      - DATABASE_URL=postgresql://pulpo:pulpo@postgres:5432/pulpo
      - REDIS_URL=redis://redis:6379
      - OLLAMA_URL=http://ollama:11434
      - TIKA_URL=http://tika:9998
      - JWT_SECRET=your-secret-key-here
      - JWT_ALGORITHM=HS256
    depends_on:
      - postgres
      - redis
      - ollama
      - tika
    volumes:
      - ./core:/app/core
      - ./services:/app/services
      - ./utils:/app/utils
      - ./uploads:/app/uploads

  # Worker RAG
  worker-rag:
    build:
      context: .
      dockerfile: Dockerfile.rag
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://pulpo:pulpo@postgres:5432/pulpo
      - REDIS_URL=redis://redis:6379
      - OLLAMA_URL=http://ollama:11434
    depends_on:
      - postgres
      - redis
      - ollama
    volumes:
      - ./core:/app/core
      - ./services:/app/services
      - ./utils:/app/utils

  # Apache Tika Server
  tika:
    image: apache/tika:latest-full
    ports:
      - "9998:9998"
    command: ["java", "-jar", "/opt/tika-server-standard.jar", "--host=0.0.0.0", "--port=9998"]

  # n8n Workflow Engine
  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/Argentina/Buenos_Aires
      - N8N_LOG_LEVEL=info
      - N8N_METRICS=true
      - N8N_DIAGNOSTICS_ENABLED=true
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n:/home/node/.n8n/workflows
    depends_on:
      - postgres
      - redis
      - orchestrator
      - actions

  # Prometheus para m√©tricas
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus_config.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus_rules.yml:/etc/prometheus/rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana para dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  ollama_data:
  n8n_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: pulpo-network
