version: '3.8'

services:
  # ==========================================
  # APLICACIÓN PRINCIPAL
  # ==========================================
  pulpo-app:
    build: .
    container_name: pulpo-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://pulpo:pulpo@postgres:5432/pulpo
      - REDIS_URL=redis://redis:6379/1
      - CANARY_ENABLED=true
      - CANARY_PERCENTAGE=0.1
      - CANARY_STRATEGY=percentage
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/metrics/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ==========================================
  # BASE DE DATOS
  # ==========================================
  postgres:
    image: postgres:15-alpine
    container_name: pulpo-postgres
    environment:
      - POSTGRES_DB=pulpo
      - POSTGRES_USER=pulpo
      - POSTGRES_PASSWORD=pulpo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pulpo -d pulpo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================
  # REDIS
  # ==========================================
  redis:
    image: redis:7-alpine
    container_name: pulpo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================
  # PROMETHEUS (MÉTRICAS)
  # ==========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: pulpo-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # ==========================================
  # GRAFANA (DASHBOARDS)
  # ==========================================
  grafana:
    image: grafana/grafana:latest
    container_name: pulpo-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    depends_on:
      - prometheus

  # ==========================================
  # NGINX (REVERSE PROXY)
  # ==========================================
  nginx:
    image: nginx:alpine
    container_name: pulpo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - pulpo-app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: pulpo-network