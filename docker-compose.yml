version: '3.8'

# ============================================================================
# PULPO AI - DOCKER COMPOSE PRODUCTION-READY
# ============================================================================
# Sistema completo de agentes conversacionales con observabilidad integrada
#
# Servicios incluidos:
# - pulpo-app: API principal (orchestrator + endpoints)
# - postgres: Base de datos con pgvector
# - redis: Cache y gestión de sesiones
# - ollama: LLM local (qwen2.5:14b, llama3.1:8b, nomic-embed-text)
# - n8n: Workflow automation (integración WhatsApp/Twilio)
# - prometheus: Métricas y alertas
# - grafana: Dashboards de observabilidad
#
# Health checks: Todos los servicios tienen health checks configurados
# Dependencies: Orden de inicio garantizado con depends_on + conditions
# Restart policy: unless-stopped para resiliencia
# ============================================================================

services:
  # ==========================================================================
  # BASE DE DATOS - PostgreSQL 15 con pgvector
  # ==========================================================================
  postgres:
    image: postgres:15-alpine
    container_name: pulpo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pulpo
      POSTGRES_USER: pulpo
      POSTGRES_PASSWORD: pulpo
      POSTGRES_INITDB_ARGS: "-c shared_buffers=256MB -c max_connections=200"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - pulpo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pulpo -d pulpo"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # CACHE - Redis 7
  # ==========================================================================
  redis:
    image: redis:7-alpine
    container_name: pulpo-redis
    restart: unless-stopped
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pulpo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # LLM - Ollama con GPU support
  # ==========================================================================
  ollama:
    image: ollama/ollama:latest
    container_name: pulpo-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - pulpo-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # Health check deshabilitado - ollama no tiene curl/wget instalado
    # El servicio funciona correctamente, verificado desde pulpo-app
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 30s
      timeout: 10s
      retries: 1
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # ==========================================================================
  # MCP SERVER - Model Context Protocol para Tools
  # ==========================================================================
  mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: pulpo-mcp:latest
    container_name: pulpo-mcp
    restart: unless-stopped
    ports:
      - "8010:8010"
    environment:
      - DATABASE_URL=postgresql://pulpo:pulpo@postgres:5432/pulpo
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pulpo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/health"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # APLICACIÓN PRINCIPAL - PulpoAI Orchestrator
  # ==========================================================================
  pulpo-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: pulpo-app:latest
    container_name: pulpo-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Database
      - DATABASE_URL=postgresql://pulpo:pulpo@postgres:5432/pulpo

      # Cache
      - REDIS_URL=redis://redis:6379/1

      # LLM
      - OLLAMA_URL=http://ollama:11434

      # MCP Server
      - MCP_URL=http://mcp:8010

      # Feature flags
      - CANARY_ENABLED=true
      - CANARY_PERCENTAGE=0.1
      - CANARY_STRATEGY=percentage

      # Logging
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json

      # Monitoring
      - PROMETHEUS_ENABLED=true

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_started
      mcp:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      pulpo-network:
        aliases:
          - orchestrator
          - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # ==========================================================================
  # WORKFLOW AUTOMATION - n8n
  # ==========================================================================
  n8n:
    image: n8nio/n8n:latest
    container_name: pulpo-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/Argentina/Buenos_Aires
      - N8N_LOG_LEVEL=info
      - N8N_METRICS=true
      - N8N_DIAGNOSTICS_ENABLED=true
      - N8N_SECURE_COOKIE=false
      - N8N_PUSH_BACKEND=websocket
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n:/home/node/.n8n/workflows:ro
    networks:
      - pulpo-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      pulpo-app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # ==========================================================================
  # MÉTRICAS - Prometheus
  # ==========================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: pulpo-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - pulpo-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # DASHBOARDS - Grafana
  # ==========================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: pulpo-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - pulpo-network
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# ============================================================================
# VOLUMES - Persistencia de datos
# ============================================================================
volumes:
  postgres_data:
    name: pulpo_postgres_data
  redis_data:
    name: pulpo_redis_data
  ollama_data:
    name: pulpo_ollama_data
  prometheus_data:
    name: pulpo_prometheus_data
  grafana_data:
    name: pulpo_grafana_data
  n8n_data:
    name: pulpo_n8n_data

# ============================================================================
# NETWORKS - Red interna de servicios
# ============================================================================
networks:
  pulpo-network:
    name: pulpo_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
